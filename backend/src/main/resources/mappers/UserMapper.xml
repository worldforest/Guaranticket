<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.ecommerce.mapper.UserMapper">

	<select id="getByEmail" parameterType="String"
		resultType="com.ecommerce.domain.User">
		SELECT
			uid AS id,
			name,
			email,
			signup_date AS signupDate,
			password,
			gender,
			update_pwd AS updatePwd,
			birth,
			type,
			company_name AS
			companyName,
			business_number AS businessNumber,
			representative_name AS
			representativeName
		FROM
			users
		WHERE
			email = #{email}
	</select>

	<select id="getById" parameterType="long"
		resultType="com.ecommerce.domain.User">
		SELECT
			uid AS id,
			name,
			email,
			signup_date AS signupDate,
			password,
			gender,
			update_pwd AS updatePwd,
			birth,
			type,
			company_name AS
			companyName,
			business_number AS businessNumber,
			representative_name AS
			representativeName
		FROM
			users
		WHERE
			uid = #{id}
	</select>

	<select id="list" resultType="com.ecommerce.domain.User">
		SELECT
			uid AS id,
			name,
			email,
			signup_date AS signupDate,
			password,
			gender,
			update_pwd AS updatePwd,
			birth,
			type,
			company_name AS companyName,
			business_number AS
			businessNumber,
			representative_name AS representativeName
		FROM
			users
	</select>

	<insert id="create" parameterType="com.ecommerce.domain.User">
	    <selectKey keyProperty="id" resultType="Integer" order="AFTER">
        	SELECT LAST_INSERT_ID() as id
    	</selectKey>
		INSERT INTO users
		(
			name,
			email,
			password,
			gender,
			update_pwd,
			birth,
			phone,
			type,
			company_name,
			business_number,
			representative_name
		)
		VALUES
		(
			#{name},
			#{email},
			#{password},
			#{gender},
			#{updatePwd},
			#{birth},
			#{phone},
			#{type},
			#{companyName},
			#{businessNumber},
			#{representativeName}
		)

	</insert>
	
	<update id="update" parameterType="com.ecommerce.domain.User">
		UPDATE
			users
		SET
			name = #{name},
			password = #{password},
			gender = #{gender},
			company_name = #{companyName},
			business_number = #{businessNumber},
			representative_name = #{representativeName}
		WHERE
			uid = #{id}	
	</update>
	
	<delete id="delete" parameterType="long">
		DELETE FROM
			users
		WHERE
			uid = #{id}
	</delete>
</mapper>
